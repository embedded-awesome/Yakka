name: Microsoft Visual C compiler

windows_sdk:
  directory: 
    find_directory: "C:\\Program Files (x86)\\Windows Kits\\10"
  version: '{{ first( windows_sdk/directory/* ) }}'

flags:
  cpp:
    global:
      - /Fm /c /EHsc /O2 /Zi /FS -MT /std:c++17
      - -I"C:\\Program Files (x86)\\Microsoft Visual Studio\\2019\\BuildTools\\VC\\Tools\\MSVC\\14.28.29333\\include" 
      - -I"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\um"
      - -I"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\shared" 
      - -I"C:\\Program Files (x86)\\Windows Kits\\10\\Include\\10.0.18362.0\\ucrt"
      - -DEBUG:FULL

  ld:
    global:
      - -SUBSYSTEM:CONSOLE 
      - -MACHINE:x64 
      - -OPT:REF 
      - -DEBUG:FULL
      - -OPT:NOICF
      - -LIBPATH:"C:/Program Files (x86)/Windows Kits/10/Lib/10.0.18362.0/um/x64"
      - -LIBPATH:"C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.28.29333/lib/onecore/x64"
      - -LIBPATH:"C:/Program Files (x86)/Windows Kits/10/Lib/10.0.18362.0/ucrt/x64"

tools:
  cl:
    exe: cl.exe
    prefix: "C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/"
  link:
    exe: link.exe
    prefix: "C:/Program Files (x86)/Microsoft Visual Studio/2019/BuildTools/VC/Tools/MSVC/14.28.29333/bin/Hostx64/x64/"

blueprints:
  link:
    depends:
      - '{{project_output}}/{{project_name}}.exe'
    process:
      - echo: "Link done"

  '{{project_output}}/{{project_name}}.exe':
    depends:
      - '[{% for name, component in components %}{%if existsIn(component,"sources") %}{% for source in component/sources %}{{project_output}}/components/{{name}}/{{source}}.o, {% endfor %}{% endif %}{% endfor %}]'
      - '{{project_output}}/{{project_name}}.global_ld_options'
    process:
      - link: "@{{project_output}}/{{project_name}}.global_ld_options -OUT:{{project_output}}/{{project_name}}.exe"

  object_files:
    regex: .+/components/([^/]*)/(.*)\.(cpp|c)\.o
    depends:
      - '{{project_output}}/components/{{$1}}/{{$1}}.{{$3}}_options'
      - '{{components/{$1}/directory}}/{{$2}}.{{$3}}'
      - '{{project_output}}/{{project_name}}.global_{{$3}}_options'
    process:
      - echo: "Compiling {{$0}}"
      - create_directory: '{{$0}}'
      - cl: "@{{project_output}}/{{project_name}}.global_{{$3}}_options @{{project_output}}/components/{{$1}}/{{$1}}.{{$3}}_options -Fo:{{$0}} {{components/{$1}/directory}}/{{$2}}.{{$3}}"
  
  '{{project_output}}/{{project_name}}.global_ld_options':
    process:
      - inja: "-MAP:\"{{project_output}}/{{project_name}}.map\" {% for name,component in components %}{% for flag in component/flags/ld/global %}{{flag}} {% endfor %}{%endfor%} -PDB:\"{{project_output}}/{{project_name}}.pdb\" {% for name, component in components %}{%if existsIn(component,\"sources\") %}{% for source in component/sources %}{{project_output}}/components/{{name}}/{{source}}.o {% endfor %}{% endif %}{% endfor %} Shlwapi.lib"
      - save:
    
  global_compiler_options:
    regex: '{{project_output}}/{{project_name}}.global_(cpp|c)_options'
    process:
      - inja: "{% for name,component in components %}
        {% for flag in component/flags/{$1}/global %}{{flag}} {% endfor %}
        {% for include in component/includes/global %}-I{{component/directory}}/{{include}} {% endfor %}
        {% for define in component/defines/global %}-D{{define}} {% endfor %}
        {%endfor%}
        {% for feature in features %}-D{{feature}}_FEATURE_REQUIRED {% endfor %}
        -I{{project_output}}"
      - save:
      
  compiler_option_files:
    regex: '.+/components/([^/]*)/\1\.(cpp|c)_options'
    depends:
      - '{{project_output}}/{{project_name}}.global_{{$2}}_options'
      - '{{components/{$1}/bob_file}}'
    process:
      - create_directory: '{{$0}}'
      - inja: "{% for flag in components/{$1}/flags/{$2}/local %}{{flag}} {% endfor %}
        {% for include in components/{$1}/includes/local %}-I{{components/{$1}/directory}}/{{include}} {% endfor %}
        {% for define in components/{$1}/defines/local %}-D{{define}} {% endfor %}"
      - save:
